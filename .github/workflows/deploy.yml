name: Deploy

on:
  push:
    branches:
      - main
env:
  APP_SLUG: skeleton
  DOCKER_REGISTRY: ghcr.io

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ env.DOCKER_REGISTRY }} -u "${{ github.repository_owner }}" --password-stdin

      - name: Build with Docker
        run: docker build -t ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ env.APP_SLUG }}:latest -f .docker/prod/Dockerfile .

      - name: Push to GitHub Container Registry
        run: docker push ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/${{ env.APP_SLUG }}:latest

      - name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: docker-swarm.yml

  deploy:
    name: 'Deploy to Production'
    environment: production
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Copy artifact via SCP to server
        uses: appleboy/scp-action@v0.1.7
        with:
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          source: artifact/*
          target: /app/${{ env.APP_SLUG }}

      - name: Deploy environment variables
        uses: appleboy/ssh-action@v1.2.2
        with:
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /app/${{ env.APP_SLUG }}
            rm -f .env
            cat <<EOF > .env
            APP_NAME=${{ vars.APP_NAME }}
            APP_ENV=${{ vars.APP_ENV }}
            APP_KEY=${{ vars.APP_KEY }}
            APP_DEBUG=${{ vars.APP_DEBUG }}
            APP_URL=${{ vars.APP_URL }}
            LOG_CHANNEL=${{ vars.LOG_CHANNEL }}
            LOG_LEVEL=${{ vars.LOG_LEVEL }}
            DB_CONNECTION=${{ vars.DB_CONNECTION }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            SESSION_DRIVER=${{ vars.SESSION_DRIVER }}
            FILESYSTEM_DISK=${{ vars.FILESYSTEM_DISK }}
            QUEUE_CONNECTION=${{ vars.QUEUE_CONNECTION }}
            CACHE_STORE=${{ vars.CACHE_STORE }}
            CACHE_PREFIX=${{ vars.CACHE_PREFIX }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            REDIS_PORT=${{ vars.REDIS_PORT }}
            MAIL_MAILER=${{ vars.MAIL_MAILER }}
            MAIL_HOST=${{ vars.MAIL_HOST }}
            MAIL_PORT=${{ vars.MAIL_PORT }}
            MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
            MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            MAIL_ENCRYPTION=${{ vars.MAIL_ENCRYPTION }}
            MAIL_FROM_ADDRESS=${{ vars.MAIL_FROM_ADDRESS }}
            MAIL_FROM_NAME=${{ vars.MAIL_FROM_NAME }}
            VITE_APP_NAME=${{ vars.VITE_APP_NAME }}
            EOF

      - name: Start deployment
        uses: appleboy/ssh-action@v1.2.2
        with:
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /app/${{ env.APP_SLUG }}
            mv ./artifact/* .
            rm -rf ./artifact

            # Login to the registry
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ env.DOCKER_REGISTRY }} -u "${{ github.repository_owner }}" --password-stdin

            # Apply the swarm
            docker stack deploy --with-registry-auth --detach=true -c docker-swarm.yml ${{ env.APP_SLUG }}

      - name: Verify Deployment
        uses: appleboy/ssh-action@v1.2.2
        with:
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker service ls
            docker stack ps ${{ env.APP_SLUG }}
